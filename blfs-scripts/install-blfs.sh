#!/bin/bash 
set -e

PKG=(
cracklib
libpwquality
linux-pam
shadow
icu
libxml2
sgml-common
unzip
docbook-xml
docbook-xsl
libxslt
pcre
itstool
python3-pygments
gtk-doc
gobject-introspection
glib
autoconf213
libtasn1
nspr
sqlite
nss
p11-kit
make-ca
curl
libuv
libarchive
nghttp2
cmake
libssh2
llvm
rustc
which
js78
polkit
systemd
libpng
freetype2
fontconfig
xorg-env
util-macros
xorgproto
libxau
xcb-proto
libxdmcp
libxcb
xorg-libraries
dbus
dbus-glib
at-spi2-core
atk
at-spi2-atk
fribidi
nasm
yasm
libjpeg-turbo
xmlto
shared-mime-info
pixman
cairo
graphite2
harfbuzz
pango
graphviz
vala
librsvg
libtiff
gdk-pixbuf
libdrm
python3-markupsafe
python3-mako
libva
libvdpau
wayland
wayland-protocols
mesa
libepoxy
adwaita-icon-theme
hicolor-icon-theme
iso-codes
xkeyboard-config
libxkbcommon
sassc
gtk3
gconf
gtk2
boost
extra-cmake-modules
giflib
libgpg-error
libgcrypt
lmdb
alsa-lib
nettle
libunistring
gnutls
lcms2
libgudev
libusb
wget
usbutils
libgusb
colord
lynx
libevent
links
xbitmaps
xcb-util
xorg-applications
xdg-utils
cups
gstreamer
cdparanoia
libogg
libvorbis
libtheora
gst-plugins-base
jasper
libmng
sdl
libwebp
krb5
mtdev
pcre2
xcb-util-image
xcb-util-keysyms
xcb-util-renderutil
xcb-util-wm
qt5
phonon
plasma-wayland-protocols
perl-test-needs
perl-uri
aspell
libdaemon
libglade
avahi
libdbusmenu-qt
libndp
jansson
popt
slang
gpm
newt
python3-pycairo
python3-pygobject
upower
desktop-file-utils
libnl
wpa_supplicant
networkmanager
polkit-qt
plasma-frameworks-info
libical
bluez
libmbim
libqmi
modemmanager
oxygen-fonts
noto-fonts
libatasmart
libbytesize
libyaml
libaio
thin-provisioning-tools
lvm2
parted
json-c
cryptsetup
libassuan
gpgme
swig
volume_key
libblockdev
lzo
asciidoc
btrfs-progs
dosfstools
gptfdisk
ntfs-3g
udisks
media-player-info
plasma-frameworks
libass
fdk-aac
lame
libvpx
opus
x264
x265
sdl2
ffmpeg
flac
libsndfile
libcap-pam
speex
pulseaudio
sbc
glu
v4l-utils
pipewire
qca
taglib
xcb-util-cursor
fftw
gsettings-desktop-schemas
libcanberra
libevdev
libinput
lm-sensors
oxygen-icons5
pciutils
plasma
)

SCRIPTDIR=$(dirname $0)/blfs

for script in ${PKG[@]}; do
        if [ -f "$SCRIPTDIR/build/$script" ]; then
		echo "--- $script skipped ---"
	else
		echo "*** $script ***"
		SRC=/home/sources $SCRIPTDIR/$script
		echo; echo "*** $script done ***"; sleep 10; echo
	fi
done

echo
echo "*****************************************************"
echo "*********    Applications build complete    *********"
echo "*****************************************************"

